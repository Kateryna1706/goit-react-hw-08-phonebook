{"version":3,"file":"static/js/907.cf0f2272.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"text\":\"ContactForm_text__kqq6l\",\"button\":\"ContactForm_button__eSwX9\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import css from './ContactForm.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst initialValues = { name: '', number: '' };\n\nconst userSchema = Yup.object().shape({\n  name: Yup.string().min(2).max(70).required(),\n  number: Yup.number().positive().integer().required(),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    const { name, number } = values;\n\n    let isExist =\n      contacts.length !== 0 &&\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      );\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={userSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={css.form}>\n        <label className={css.label}>\n          <span className={css.text}>Name:</span>\n          <Field\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </label>\n        <label className={css.label}>\n          <span className={css.text}>Number:</span>\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          />\n          <ErrorMessage name=\"number\" component=\"div\" />\n        </label>\n\n        <button type=\"submit\" className={css.button}>\n          Add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"text\":\"Filter_text__uqQRu\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const { value } = event.currentTarget;\n\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <label className={css.container}>\n      <span className={css.text}>Find contacts by name</span>\n      <input type=\"text\" name=\"filter\" onChange={handleFilterChange} />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"listItem\":\"ContactList_listItem__SptUx\",\"text\":\"ContactList_text__+NWAW\",\"button\":\"ContactList_button__7kL4l\"};","import css from './ContactList.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={css.list}>\n      {visibleContacts.map(({ name, number, id }) => (\n        <li key={id} className={css.listItem}>\n          <span className={css.text}>\n            {name}: {number}\n          </span>\n          <button\n            type=\"text\"\n            onClick={() => handleDelete(id)}\n            className={css.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {isLoading && !error && <b>Request in progress...</b>}\n      {contacts.length !== 0 && <h2>Contacts</h2>}\n      {contacts.length !== 0 && <Filter />}\n      {contacts.length !== 0 && <ContactList />}\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","name","toLowerCase","includes","initialValues","number","userSchema","Yup","shape","min","max","required","positive","integer","ContactForm","useSelector","dispatch","useDispatch","validationSchema","onSubmit","values","actions","length","some","contact","alert","addContact","resetForm","className","css","type","title","component","Filter","onChange","event","value","currentTarget","changeFilter","ContactList","visibleContacts","map","id","onClick","deleteContact","handleDelete","Contacts","useEffect","fetchContacts"],"sourceRoot":""}